name: Deploy
on:
  push:
    tags:
      - v[1-9]+.[0-9]+.[0-9]+
      - release/v[1-9]+.[0-9]+.[0-9]+
jobs:
  define:
    name: Define environment for deploy
    runs-on: ubuntu-latest

    env:
      IMAGE: transcripter_bot
      IMAGE_TEST: transcripter_bot_test
      SERVICE_NAME: transcripter_bot_service
      TEST_SERVICE_NAME: transcripter_bot_service_test

    outputs:
      image: ${{ steps.define_env.outputs.image }}
      service: ${{ steps.define_env.outputs.service }}

    steps:
      - name: Extract branch name
        shell: bash
        run: |
          if [[ "${GITHUB_REF#refs/tags/}" == *release* ]]; then
            echo "branch=master" >> $GITHUB_OUTPUT
          else
            echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          fi
        id: extract_branch

      - name: Define environment
        shell: bash
        run: |
          echo ${{ steps.extract_branch.outputs.branch }}
          if [ "${{ steps.extract_branch.outputs.branch }}" = "master" ] ;then depimage=$IMAGE; srvName=$SERVICE_NAME; else depimage=$IMAGE_TEST;srvName=$TEST_SERVICE_NAME ; fi
          echo "image=$depimage" >> $GITHUB_OUTPUT
          echo "service=$srvName" >> $GITHUB_OUTPUT
        id: define_env

  dockerSetup:
    name: Setup and build docker
    runs-on: ubuntu-latest
    needs: define

    env:
      OWNER: mrbelka12000

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Docker login
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u $OWNER --password-stdin 

      - name: Docker build
        run: |
          docker build -t $OWNER/${{ needs.define.outputs.image }}:latest .

      - name: Docker push
        run: |
          docker push $OWNER/${{ needs.define.outputs.image }}:latest

  deploy:
    name: Deploy on server
    runs-on: ubuntu-latest
    needs: [define, dockerSetup]
    environment:
      name: production
      url: https://t.me/chat_transcripter_bot
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa.pub
      - name: copy builds to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER_IP }} "docker service update --force --image mrbelka12000/${{ needs.define.outputs.image }}:latest ${{ needs.define.outputs.service }}"
